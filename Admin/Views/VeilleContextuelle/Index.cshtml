@model IEnumerable<Admin.ViewModel.VeilleContextuelleViewModel>

@{
    ViewData["Title"] = "Liste des Veilles Contextuelles";
}

@section Styles {
    <link rel="stylesheet" href="~/assets/libs/sweetalert2/sweetalert2.min.css">
    <link rel="stylesheet" href="~/assets/css/veilleContextuelle.css">
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex align-items-center">
                <i class='bx bx-search bx-lg ml-3 mr-3 text-primary'></i>
                <div>
                    <h2 class="h2 text-primary m-0">Liste des Veilles Contextuelles</h2>
                    @* <p class="card-title-desc">Vous trouvez ici toutes les veilles contextuelles saisies.</p> *@
                </div>
            </div>

            <div class="card-body">
                <!-- Documentation des boutons -->
                <div class="alert alert-info" role="alert">
                    <ul>
                        <li>
                            <strong class="text-primary">Bouton Détails (<i class="fas fa-chart-pie font-size-16 align-middle"></i>)</strong> : Ce bouton permet de voir les détails d'une veille contextuelle. Il redirige vers une page de détails.
                        </li>
                        <li>
                            <strong class="text-danger">Bouton Rejeter (<i class="bx bx-block font-size-16 align-middle"></i>)</strong> : Ce bouton permet de rejeter une veille contextuelle. Il ouvre une boîte de dialogue de confirmation avant de procéder à la mise à jour du statut.
                        </li>
                        <li>
                            <strong class="text-warning">Bouton Partiellement Satisfaisante (<i class="bx bx-error font-size-16 align-middle"></i>)</strong> : Ce bouton permet de marquer une veille contextuelle comme <span class="text-warning">"Partiellement Satisfaisante"</span>. Il ouvre une boîte de dialogue de confirmation avant de procéder à la mise à jour du statut.
                        </li>
                        <li>
                            <strong class="text-success">Bouton Accepter (<i class="bx bx-check-double font-size-16 align-middle"></i>)</strong> : Ce bouton permet d'accepter une veille contextuelle. Il ouvre une boîte de dialogue de confirmation avant de procéder à la mise à jour du statut.
                        </li>
                    </ul>
                </div>
                <a asp-action="Create" type="button" class="btn btn-primary waves-effect waves-light w-sm">
                     Ajouter
                </a>
                @if (Model != null && Model.Any())
                {
                    <div class="table-responsive">
                        <table id="myTable" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Date de l'événement</th>
                                    <th>Type d'événement</th>
                                    <th>Source d'information</th>
                                    <th>Agent/Admin</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var veille in Model)
                                {
                                    var rowClass = veille.VerificationStatus switch
                                    {
                                        Admin.Enums.VerificationStatus.Rejete => "table-danger",
                                        Admin.Enums.VerificationStatus.CinquanteCinquante => "table-warning",
                                        Admin.Enums.VerificationStatus.Accepte => "table-success",
                                        _ => ""
                                    };

                                    <tr class="@rowClass">
                                        <td>
                                            <strong>@veille.DateEvenement.ToString("dd/MM/yyyy")</strong> @veille.DateEvenement.ToString("HH:mm:ss")
                                        </td>
                                        <td>@veille.TypeEvenement</td>
                                        <td>@veille.SourceInformation</td>
                                        @{
                                            var words = veille.AgentMS2.Split(' ');
                                            var lastWord = words.Last();
                                            var otherWords = string.Join(" ", words.Take(words.Length - 1));
                                        }
                                        <td>
                                            <strong>@otherWords</strong> @lastWord
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group" aria-label="Actions">
                                                <a asp-action="Details" asp-route-id="@veille.Id" class="btn btn-subtle-primary btn-sm waves-effect waves-light">
                                                    <i class="fas fa-chart-pie font-size-16 align-middle"></i>
                                                </a>
                                                @if (veille.VerificationStatus != Admin.Enums.VerificationStatus.Rejete)
                                                {
                                                    <button type="button" class="btn btn-subtle-danger btn-sm waves-effect waves-light" onclick="confirmUpdateStatus(@veille.Id, 0)"><i class="bx bx-block font-size-16 align-middle"></i></button>
                                                }
                                                @if (veille.VerificationStatus != Admin.Enums.VerificationStatus.CinquanteCinquante)
                                                {
                                                    <button type="button" class="btn btn-subtle-warning btn-sm waves-effect waves-light" onclick="confirmUpdateStatus(@veille.Id, 1)"><i class="bx bx-error font-size-16 align-middle"></i></button>
                                                }
                                                @if (veille.VerificationStatus != Admin.Enums.VerificationStatus.Accepte)
                                                {
                                                    <button type="button" class="btn btn-subtle-success btn-sm waves-effect waves-light" onclick="confirmUpdateStatus(@veille.Id, 2)"><i class="bx bx-check-double font-size-16 align-middle"></i></button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info" role="alert">
                        Aucun enregistrement trouvé.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/libs/jquery/jquery-3.6.0.min.js"></script>
    <script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/assets/DataTables/datatables.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
        });

        function confirmUpdateStatus(veilleId, status) {
            Swal.fire({
                title: 'Êtes-vous sûr?',
                text: "Vous êtes sur le point de mettre à jour le statut de cette veille contextuelle.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Oui, mettre à jour!',
                cancelButtonText: 'Annuler'
            }).then((result) => {
                if (result.isConfirmed) {
                    showLoading();
                    updateStatus(veilleId, status);
                }
            });
        }

        function showLoading() {
            Swal.fire({
                title: 'Veuillez patienter',
                text: 'Mise à jour en cours...',
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
        }

        function updateStatus(veilleId, status) {
            $.ajax({
                url: '@Url.Action("UpdateStatus", "VeilleContextuelle")',
                type: 'POST',
                data: {
                    veilleId: veilleId,
                    status: status
                },
                success: function (result) {
                    Swal.close();
                    Swal.fire({
                        title: 'Succès!',
                        text: 'Le statut a été mis à jour avec succès.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload();
                    });
                },
                error: function (xhr, status, error) {
                    Swal.close();
                    Swal.fire({
                        title: 'Erreur',
                        text: 'Une erreur s\'est produite lors de la mise à jour du statut.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }
    </script>
}
